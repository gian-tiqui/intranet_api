generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  password       String
  firstName      String  
  middleName     String?
  lastName       String
  lastNamePrefix String?
  preferredName  String?
  suffix         String?
  address        String?
  city           String?
  state          String?
  zipCode        Int?
  dob            DateTime @db.Date
  gender         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  refreshToken   String?  @unique
  deptId         Int
  posts          Post[]
  comments       Comment[]
}

model Department {
  deptId         Int      @id @default(autoincrement())
  departmentName String   @unique
  posts          Post[]
}

model Post {
  pid            Int      @id @default(autoincrement())
  userId         Int
  deptId         Int
  message        String?  @db.VarChar(255)
  imageLocation  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  department     Department @relation(fields: [deptId], references: [deptId])
  comments       Comment[] 
}

model Comment {
  cid            Int      @id @default(autoincrement())
  userId         Int
  postId         Int
  parentId       Int?
  message        String   @db.VarChar(255)
  imageLocation  String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  post           Post     @relation(fields: [postId], references: [pid], onDelete: Cascade)
  parentComment  Comment? @relation("CommentReplies", fields: [parentId], references: [cid])
  replies        Comment[] @relation("CommentReplies")

  @@index([parentId])
}

